name: lint
on: [push, pull_request]
jobs:
    lint:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: "3.11.9"
            - name: Install dependencies
              run: |
                  python -m pip install uv==0.6.7
                  uv pip install -e ".[ci]" --system

            - name: Run ruff for tests
              uses: astral-sh/ruff-action@v1
              with:
                  src: "./tests"

            - name: Mypy
              run: mypy

            - name: Ruff for src
              run: ruff check --fix

            - name: Format
              run: ruff format
    e2e:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Set up Docker Compose
              run: |
                  sudo apt-get update
                  sudo apt-get install -y docker-compose

            - name: Run tests
              run: docker compose -f docker-compose.test.yml up --build --abort-on-container-exit

    build:
        needs: [e2e, lint]
        runs-on: ubuntu-latest
        permissions:
            packages: write
            contents: read
        steps:
            - name: Checkout the repository
              uses: actions/checkout@v3

            - name: Docker Setup Buildx
              uses: docker/setup-buildx-action@v2.2.1

            - name: Docker Login
              uses: docker/login-action@v2.1.0
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Build and push Docker images
              uses: docker/build-push-action@v3.2.0
              env:
                  REGISTRY: ghcr.io
                  IMAGE_NAME: ${{ github.repository }}
              with:
                  context: .
                  file: ./Dockerfile
                  push: true
                  tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
